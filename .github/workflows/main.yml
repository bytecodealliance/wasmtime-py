name: CI
on:
  push:
    branches: [master]
    tags-ignore: [dev]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 0 * * *' # run at 00:00 UTC

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, pypy3]
        exclude:
        # Looks like pypy on Windows is 32-bit, so don't test it since we
        # only work with 64-bit builds
        - os: windows-latest
          python-version: pypy3
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - run: python download-wasmtime.py
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pytest
      - run: pytest

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - plat: manylinux1-x86_64
          file: x86_64-linux-c-api.tar.xz
        - plat: macosx-10-13-x86_64
          file: x86_64-macos-c-api.tar.xz
        - plat: win-amd64
          file: x86_64-windows-c-api.zip
        - plat: mingw
          file: x86_64-windows-c-api.zip
        - plat: linux-aarch64
          file: aarch64-linux-c-api.tar.xz
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install setuptools wheel
    # If this is a tagged build use real version numbers
    - run: echo "::set-env name=PROD::true"
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    - run: python download-wasmtime.py ${{ matrix.file }}
    - run: python setup.py bdist_wheel --plat-name ${{ matrix.plat }}
    - uses: actions/upload-artifact@v2
      with:
        name: wheel-${{ matrix.plat }}
        path: dist

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - run: pip install flake8
      - run: flake8

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install pdoc3
    - run: python download-wasmtime.py
    - run: pdoc --html wasmtime
    - uses: actions/upload-artifact@v2
      with:
        name: generated-docs
        path: html/wasmtime

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: python download-wasmtime.py
    - run: pip install coverage pytest
    - run: coverage run -m pytest
    - run: coverage html
    - uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: htmlcov

  upload_docs:
    needs: [coverage, docs]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: generated-docs
        path: html
    - uses: actions/download-artifact@v2
      with:
        name: coverage
        path: html/coverage
    - run: find .
    - name: Push to gh-pages
      run: curl -LsSf https://git.io/fhJ8n | rustc - && (cd html && ../rust_out)
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        GITHUB_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        BUILD_REPOSITORY_ID: ${{ github.repository }}
        BUILD_SOURCEVERSION: ${{ github.sha }}

  upload_wheels:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/download-artifact@v2
      with:
        path: wheels
    - run: find .

    - run: mkdir dist && mv wheels/**/*.whl dist

    - name: Publish distribution ðŸ“¦ to Test PyPI
      if: github.event_name == 'push'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution ðŸ“¦ to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
